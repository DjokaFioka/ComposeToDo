package rs.djokafioka.composetodo.ui.theme

import androidx.compose.ui.graphics.Color

val Purple80 = Color(0xFFD0BCFF)
val PurpleGrey80 = Color(0xFFCCC2DC)
val Pink80 = Color(0xFFEFB8C8)

val Purple40 = Color(0xFF6650a4)
val PurpleGrey40 = Color(0xFF625b71)
val Pink40 = Color(0xFF7D5260)

val primaryLight = Color(0xFFA8381D)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFFF8568)
val onPrimaryContainerLight = Color(0xFF400700)
val secondaryLight = Color(0xFF8A4E40)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFFFBAAA)
val onSecondaryContainerLight = Color(0xFF5D2A1E)
val tertiaryLight = Color(0xFF715C00)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFC8A617)
val onTertiaryContainerLight = Color(0xFF261D00)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFFF8F6)
val onBackgroundLight = Color(0xFF251916)
val surfaceLight = Color(0xFFFFF8F6)
val onSurfaceLight = Color(0xFF251916)
val surfaceVariantLight = Color(0xFFFDDBD4)
val onSurfaceVariantLight = Color(0xFF58413C)
val outlineLight = Color(0xFF8B716B)
val outlineVariantLight = Color(0xFFDFC0B8)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF3B2D2A)
val inverseOnSurfaceLight = Color(0xFFFFEDE9)
val inversePrimaryLight = Color(0xFFFFB4A3)
val surfaceDimLight = Color(0xFFECD5D0)
val surfaceBrightLight = Color(0xFFFFF8F6)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFFF0ED)
val surfaceContainerLight = Color(0xFFFFE9E4)
val surfaceContainerHighLight = Color(0xFFFAE3DE)
val surfaceContainerHighestLight = Color(0xFFF4DED8)

val primaryLightMediumContrast = Color(0xFF821C04)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFFC64D31)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF693327)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFFA46454)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF514100)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF8B7200)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFFF8F6)
val onBackgroundLightMediumContrast = Color(0xFF251916)
val surfaceLightMediumContrast = Color(0xFFFFF8F6)
val onSurfaceLightMediumContrast = Color(0xFF251916)
val surfaceVariantLightMediumContrast = Color(0xFFFDDBD4)
val onSurfaceVariantLightMediumContrast = Color(0xFF543E38)
val outlineLightMediumContrast = Color(0xFF725954)
val outlineVariantLightMediumContrast = Color(0xFF8F756F)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF3B2D2A)
val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE9)
val inversePrimaryLightMediumContrast = Color(0xFFFFB4A3)
val surfaceDimLightMediumContrast = Color(0xFFECD5D0)
val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0ED)
val surfaceContainerLightMediumContrast = Color(0xFFFFE9E4)
val surfaceContainerHighLightMediumContrast = Color(0xFFFAE3DE)
val surfaceContainerHighestLightMediumContrast = Color(0xFFF4DED8)

val primaryLightHighContrast = Color(0xFF490900)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF821C04)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF401409)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF693327)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF2B2100)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF514100)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFFF8F6)
val onBackgroundLightHighContrast = Color(0xFF251916)
val surfaceLightHighContrast = Color(0xFFFFF8F6)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFFDDBD4)
val onSurfaceVariantLightHighContrast = Color(0xFF321F1B)
val outlineLightHighContrast = Color(0xFF543E38)
val outlineVariantLightHighContrast = Color(0xFF543E38)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF3B2D2A)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFFFE7E1)
val surfaceDimLightHighContrast = Color(0xFFECD5D0)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFFF0ED)
val surfaceContainerLightHighContrast = Color(0xFFFFE9E4)
val surfaceContainerHighLightHighContrast = Color(0xFFFAE3DE)
val surfaceContainerHighestLightHighContrast = Color(0xFFF4DED8)

val primaryDark = Color(0xFFFFB4A3)
val onPrimaryDark = Color(0xFF621000)
val primaryContainerDark = Color(0xFFF26D4E)
val onPrimaryContainerDark = Color(0xFF010000)
val secondaryDark = Color(0xFFFFB4A3)
val onSecondaryDark = Color(0xFF522216)
val secondaryContainerDark = Color(0xFF632F22)
val onSecondaryContainerDark = Color(0xFFFFC4B6)
val tertiaryDark = Color(0xFFF7D146)
val onTertiaryDark = Color(0xFF3B2F00)
val tertiaryContainerDark = Color(0xFFCAA81A)
val onTertiaryContainerDark = Color(0xFF281F00)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF1C110E)
val onBackgroundDark = Color(0xFFF4DED8)
val surfaceDark = Color(0xFF1C110E)
val onSurfaceDark = Color(0xFFF4DED8)
val surfaceVariantDark = Color(0xFF58413C)
val onSurfaceVariantDark = Color(0xFFDFC0B8)
val outlineDark = Color(0xFFA78A84)
val outlineVariantDark = Color(0xFF58413C)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF4DED8)
val inverseOnSurfaceDark = Color(0xFF3B2D2A)
val inversePrimaryDark = Color(0xFFA8381D)
val surfaceDimDark = Color(0xFF1C110E)
val surfaceBrightDark = Color(0xFF443633)
val surfaceContainerLowestDark = Color(0xFF160C09)
val surfaceContainerLowDark = Color(0xFF251916)
val surfaceContainerDark = Color(0xFF291D1A)
val surfaceContainerHighDark = Color(0xFF342724)
val surfaceContainerHighestDark = Color(0xFF3F322E)

val primaryDarkMediumContrast = Color(0xFFFFBAAA)
val onPrimaryDarkMediumContrast = Color(0xFF330500)
val primaryContainerDarkMediumContrast = Color(0xFFF26D4E)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFFFBAAA)
val onSecondaryDarkMediumContrast = Color(0xFF300802)
val secondaryContainerDarkMediumContrast = Color(0xFFC57F6E)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFF7D146)
val onTertiaryDarkMediumContrast = Color(0xFF271E00)
val tertiaryContainerDarkMediumContrast = Color(0xFFCAA81A)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF1C110E)
val onBackgroundDarkMediumContrast = Color(0xFFF4DED8)
val surfaceDarkMediumContrast = Color(0xFF1C110E)
val onSurfaceDarkMediumContrast = Color(0xFFFFF9F8)
val surfaceVariantDarkMediumContrast = Color(0xFF58413C)
val onSurfaceVariantDarkMediumContrast = Color(0xFFE4C4BC)
val outlineDarkMediumContrast = Color(0xFFBA9C96)
val outlineVariantDarkMediumContrast = Color(0xFF987D77)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFF4DED8)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF342724)
val inversePrimaryDarkMediumContrast = Color(0xFF892208)
val surfaceDimDarkMediumContrast = Color(0xFF1C110E)
val surfaceBrightDarkMediumContrast = Color(0xFF443633)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF160C09)
val surfaceContainerLowDarkMediumContrast = Color(0xFF251916)
val surfaceContainerDarkMediumContrast = Color(0xFF291D1A)
val surfaceContainerHighDarkMediumContrast = Color(0xFF342724)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF3F322E)

val primaryDarkHighContrast = Color(0xFFFFF9F8)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFFFBAAA)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFFF9F8)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFFFBAAA)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFFAF6)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFECC83D)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF1C110E)
val onBackgroundDarkHighContrast = Color(0xFFF4DED8)
val surfaceDarkHighContrast = Color(0xFF1C110E)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF58413C)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFF9F8)
val outlineDarkHighContrast = Color(0xFFE4C4BC)
val outlineVariantDarkHighContrast = Color(0xFFE4C4BC)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFF4DED8)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF570D00)
val surfaceDimDarkHighContrast = Color(0xFF1C110E)
val surfaceBrightDarkHighContrast = Color(0xFF443633)
val surfaceContainerLowestDarkHighContrast = Color(0xFF160C09)
val surfaceContainerLowDarkHighContrast = Color(0xFF251916)
val surfaceContainerDarkHighContrast = Color(0xFF291D1A)
val surfaceContainerHighDarkHighContrast = Color(0xFF342724)
val surfaceContainerHighestDarkHighContrast = Color(0xFF3F322E)


//Material2
//val Purple200 = Color(0xFFBB86FC)
//val Purple500 = Color(0xFF6200EE)
//val Purple700 = Color(0xFF3700B3)
//val Teal200 = Color(0xFF03DAC5)
//
//val LightGray = Color(0xFFFCFCFC)
//val MediumGray = Color(0xFF9C9C9C)
//val DarkGray = Color(0xFF141414)
//
val LowPriority = Color(0xFF00C980)
val MediumPriority = Color(0xFFFFC114)
val HighPriority = Color(0xFFFF4646)
//val NonePriority = MediumGray
//
////val Colors.splashScreenBackground: Color
////    @Composable
////    get() = if (isLight) Purple700 else Color.Black
//
//val Colors.taskItemTextColor: Color
//    @Composable
//    get() = if (isLight) DarkGray else LightGray
//
//val Colors.taskItemBackgroundColor: Color
//    @Composable
//    get() = if (isLight) Color.White else DarkGray
//
//val Colors.fabBackgroundColor: Color
//    @Composable
//    get() = if (isLight) Teal200 else Purple700
//
//val Colors.topAppBarContentColor: Color
//    @Composable
//    get() = if (isLight) Color.White else LightGray
//
//val Colors.topAppBarBackgroundColor: Color
//    @Composable
//    get() = if (isLight) Purple500 else Color.Black